using AzRanger.Models;
using AzRanger.Models.ExchangeOnline;

namespace AzRanger.Checks.Rules
{
    [RuleMeta("EXONotifcationUsersSendingMalware", ScopeEnum.EXO, MaturityLevel.Mature, "https://security.microsoft.com/antimalwarev2")]
    [CISM365("4.10", "", Level.L1, "v2.0")]
    [RuleInfo("No one is notified if a user sends potentially malicious mail", "Sending malicious mail is often an indication of an infected computer. Thus, not notifying admins in the case increases the investigation time.", 5, "https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/configure-anti-malware-policies?view=o365-worldwide", null, "See reference.")]
    class EXONotifcationUsersSendingMalware : BaseCheck
    {
        public override CheckResult Audit(Tenant tenant)
        {
            MalwareFilterRule highestPriority = null;

            foreach (MalwareFilterRule rule in tenant.ExchangeOnlineSettings.MalwareFilterRule)
            {
                if (rule.State == "Enabled" && highestPriority == null)
                {
                    highestPriority = rule;
                }
                else
                {
                    if (rule.State == "Enabled" && highestPriority.Priority < rule.Priority)
                    {
                        highestPriority = rule;
                    }
                }
            }

            // If we have no rule, then it is a finding.
            if (highestPriority == null)
            {
                return CheckResult.Finding;
            }

            foreach (MalwareFilterPolicy policy in tenant.ExchangeOnlineSettings.MalwareFilterPolicy)
            {
                if (policy.Identity == highestPriority.Identity)
                {
                    if (policy.EnableInternalSenderAdminNotifications == true && policy.InternalSenderAdminAddress.Length > 0)
                    {
                        return CheckResult.NoFinding;
                    }
                }
            }
            return CheckResult.Finding;
        }
    }
}
